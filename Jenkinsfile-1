pipeline {
    agent any
/*    stages {
        stage('SCM') {
           steps {
               git branch: 'devops' url: 'https://github.com/foo/bar.git'
            }
         }  */
        stage('build && SonarQube analysis') {
            steps {
                withSonarQubeEnv('credentialsId: 'sonar-jenkins') {
                    // Optionally use a Maven environment you've configured already
         
                        sh 'mvn clean package sonar:sonar'
                    
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
                     if (qg.status != 'OK') {
                              error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                }
            }
        }
    }
}
